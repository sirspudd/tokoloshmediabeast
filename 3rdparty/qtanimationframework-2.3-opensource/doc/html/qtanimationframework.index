<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE QDOCINDEX>
<INDEX url="" title="Qt Solutions: Qt Animation Framework Documentation" version="">
    <namespace access="public" threadsafety="unspecified" status="commendable" name="" href="" location="" module="">
        <class access="public" threadsafety="unspecified" status="commendable" name="QtAbstractTransition" href="qtabstracttransition.html" location="qtabstracttransition.h" bases="QObject" module="QtCore">
            <contents name="subclassing" title="Subclassing" level="1"></contents>
            <property access="public" threadsafety="unspecified" status="commendable" name="source" fullname="QtAbstractTransition::source" href="qtabstracttransition.html#source-prop" location="qtabstracttransition.h" type="QtState *">
                <getter name="sourceState"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="target" fullname="QtAbstractTransition::target" href="qtabstracttransition.html#target-prop" location="qtabstracttransition.h" type="QtAbstractState *">
                <getter name="targetState"></getter>
                <setter name="setTargetState"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="targets" fullname="QtAbstractTransition::targets" href="qtabstracttransition.html#targets-prop" location="qtabstracttransition.h" type="QList&lt;QtAbstractState *&gt;">
                <getter name="targetStates"></getter>
                <setter name="setTargetStates"></setter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtAbstractTransition" fullname="QtAbstractTransition::QtAbstractTransition" href="qtabstracttransition.html#QtAbstractTransition" location="qtabstracttransition.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtAbstractTransition(QtState * sourceState)">
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtAbstractTransition" fullname="QtAbstractTransition::QtAbstractTransition" href="qtabstracttransition.html#QtAbstractTransition-2" location="qtabstracttransition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtAbstractTransition(const QList&lt;QtAbstractState *&gt; &amp; targets, QtState * sourceState)">
                <parameter left="const QList&lt;QtAbstractState *&gt; &amp;" right="" name="targets" default=""></parameter>
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtAbstractTransition" fullname="QtAbstractTransition::~QtAbstractTransition" href="qtabstracttransition.html#dtor.QtAbstractTransition" location="qtabstracttransition.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtAbstractTransition()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sourceState" fullname="QtAbstractTransition::sourceState" href="qtabstracttransition.html#source-prop" location="qtabstracttransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="source" type="QtState *" signature="sourceState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="targetState" fullname="QtAbstractTransition::targetState" href="qtabstracttransition.html#target-prop" location="qtabstracttransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="target" type="QtAbstractState *" signature="targetState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTargetState" fullname="QtAbstractTransition::setTargetState" href="qtabstracttransition.html#target-prop" location="qtabstracttransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="target" type="void" signature="setTargetState(QtAbstractState * target)">
                <parameter left="QtAbstractState *" right="" name="target" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="targetStates" fullname="QtAbstractTransition::targetStates" href="qtabstracttransition.html#targets-prop" location="qtabstracttransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="targets" type="QList&lt;QtAbstractState *&gt;" signature="targetStates() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTargetStates" fullname="QtAbstractTransition::setTargetStates" href="qtabstracttransition.html#targets-prop" location="qtabstracttransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="targets" type="void" signature="setTargetStates(const QList&lt;QtAbstractState *&gt; &amp; targets)">
                <parameter left="const QList&lt;QtAbstractState *&gt; &amp;" right="" name="targets" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAnimation" fullname="QtAbstractTransition::addAnimation" href="qtabstracttransition.html#addAnimation" location="qtabstracttransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addAnimation(QtAbstractAnimation * animation)">
                <parameter left="QtAbstractAnimation *" right="" name="animation" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAnimation" fullname="QtAbstractTransition::removeAnimation" href="qtabstracttransition.html#removeAnimation" location="qtabstracttransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeAnimation(QtAbstractAnimation * animation)">
                <parameter left="QtAbstractAnimation *" right="" name="animation" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="animations" fullname="QtAbstractTransition::animations" href="qtabstracttransition.html#animations" location="qtabstracttransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QtAbstractAnimation *&gt;" signature="animations() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="eventTest" fullname="QtAbstractTransition::eventTest" href="qtabstracttransition.html#eventTest" location="qtabstracttransition.h" virtual="pure" meta="plain" const="true" static="false" overload="false" type="bool" signature="eventTest(QEvent * event) const">
                <parameter left="QEvent *" right="" name="event" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="onTransition" fullname="QtAbstractTransition::onTransition" href="qtabstracttransition.html#onTransition" location="qtabstracttransition.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="onTransition()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QtGraphicsWidget" href="qtgraphicswidget.html" location="qtgraphicswidget.h" bases="QGraphicsWidget" module="QtGui">
            <property access="public" threadsafety="unspecified" status="commendable" name="pos" fullname="QtGraphicsWidget::pos" href="qtgraphicswidget.html#pos-prop" location="qtgraphicswidget.h" type="QPointF"></property>
            <property access="public" threadsafety="unspecified" status="commendable" name="geometry" fullname="QtGraphicsWidget::geometry" href="qtgraphicswidget.html#geometry-prop" location="qtgraphicswidget.h" type="QRectF"></property>
            <property access="public" threadsafety="unspecified" status="commendable" name="xRotation" fullname="QtGraphicsWidget::xRotation" href="qtgraphicswidget.html#xRotation-prop" location="qtgraphicswidget.h" type="qreal">
                <getter name="xRotation"></getter>
                <setter name="setXRotation"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="yRotation" fullname="QtGraphicsWidget::yRotation" href="qtgraphicswidget.html#yRotation-prop" location="qtgraphicswidget.h" type="qreal">
                <getter name="yRotation"></getter>
                <setter name="setYRotation"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="zRotation" fullname="QtGraphicsWidget::zRotation" href="qtgraphicswidget.html#zRotation-prop" location="qtgraphicswidget.h" type="qreal">
                <getter name="zRotation"></getter>
                <setter name="setZRotation"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="xScale" fullname="QtGraphicsWidget::xScale" href="qtgraphicswidget.html#xScale-prop" location="qtgraphicswidget.h" type="qreal">
                <getter name="xScale"></getter>
                <setter name="setXScale"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="yScale" fullname="QtGraphicsWidget::yScale" href="qtgraphicswidget.html#yScale-prop" location="qtgraphicswidget.h" type="qreal">
                <getter name="yScale"></getter>
                <setter name="setYScale"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="transformOrigin" fullname="QtGraphicsWidget::transformOrigin" href="qtgraphicswidget.html#transformOrigin-prop" location="qtgraphicswidget.h" type="QPointF">
                <getter name="transformOrigin"></getter>
                <setter name="setTransformOrigin"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="zValue" fullname="QtGraphicsWidget::zValue" href="qtgraphicswidget.html#zValue-prop" location="qtgraphicswidget.h" type="qreal"></property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtGraphicsWidget" fullname="QtGraphicsWidget::QtGraphicsWidget" href="qtgraphicswidget.html#QtGraphicsWidget" location="qtgraphicswidget.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtGraphicsWidget(QGraphicsItem * parent, Qt::WindowFlags wflags)">
                <parameter left="QGraphicsItem *" right="" name="parent" default="0"></parameter>
                <parameter left="Qt::WindowFlags" right="" name="wflags" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtGraphicsWidget" fullname="QtGraphicsWidget::~QtGraphicsWidget" href="qtgraphicswidget.html#dtor.QtGraphicsWidget" location="qtgraphicswidget.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtGraphicsWidget()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="xRotation" fullname="QtGraphicsWidget::xRotation" href="qtgraphicswidget.html#xRotation-prop" location="qtgraphicswidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="xRotation" type="qreal" signature="xRotation() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setXRotation" fullname="QtGraphicsWidget::setXRotation" href="qtgraphicswidget.html#xRotation-prop" location="qtgraphicswidget.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="xRotation" type="void" signature="setXRotation(qreal angle)">
                <parameter left="qreal" right="" name="angle" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="yRotation" fullname="QtGraphicsWidget::yRotation" href="qtgraphicswidget.html#yRotation-prop" location="qtgraphicswidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="yRotation" type="qreal" signature="yRotation() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setYRotation" fullname="QtGraphicsWidget::setYRotation" href="qtgraphicswidget.html#yRotation-prop" location="qtgraphicswidget.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="yRotation" type="void" signature="setYRotation(qreal angle)">
                <parameter left="qreal" right="" name="angle" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="zRotation" fullname="QtGraphicsWidget::zRotation" href="qtgraphicswidget.html#zRotation-prop" location="qtgraphicswidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="zRotation" type="qreal" signature="zRotation() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setZRotation" fullname="QtGraphicsWidget::setZRotation" href="qtgraphicswidget.html#zRotation-prop" location="qtgraphicswidget.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="zRotation" type="void" signature="setZRotation(qreal angle)">
                <parameter left="qreal" right="" name="angle" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="xScale" fullname="QtGraphicsWidget::xScale" href="qtgraphicswidget.html#xScale-prop" location="qtgraphicswidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="xScale" type="qreal" signature="xScale() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setXScale" fullname="QtGraphicsWidget::setXScale" href="qtgraphicswidget.html#xScale-prop" location="qtgraphicswidget.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="xScale" type="void" signature="setXScale(qreal factor)">
                <parameter left="qreal" right="" name="factor" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="yScale" fullname="QtGraphicsWidget::yScale" href="qtgraphicswidget.html#yScale-prop" location="qtgraphicswidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="yScale" type="qreal" signature="yScale() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setYScale" fullname="QtGraphicsWidget::setYScale" href="qtgraphicswidget.html#yScale-prop" location="qtgraphicswidget.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="yScale" type="void" signature="setYScale(qreal factor)">
                <parameter left="qreal" right="" name="factor" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="transformOrigin" fullname="QtGraphicsWidget::transformOrigin" href="qtgraphicswidget.html#transformOrigin-prop" location="qtgraphicswidget.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="transformOrigin" type="QPointF" signature="transformOrigin() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTransformOrigin" fullname="QtGraphicsWidget::setTransformOrigin" href="qtgraphicswidget.html#transformOrigin-prop" location="qtgraphicswidget.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="transformOrigin" type="void" signature="setTransformOrigin(const QPointF &amp; origin)">
                <parameter left="const QPointF &amp;" right="" name="origin" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QtVariantAnimation" href="qtvariantanimation.html" location="qtvariantanimation.h" bases="QtAbstractAnimation" module="QtCore">
            <property access="public" threadsafety="unspecified" status="commendable" name="startValue" fullname="QtVariantAnimation::startValue" href="qtvariantanimation.html#startValue-prop" location="qtvariantanimation.h" type="QVariant">
                <getter name="startValue"></getter>
                <setter name="setStartValue"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="endValue" fullname="QtVariantAnimation::endValue" href="qtvariantanimation.html#endValue-prop" location="qtvariantanimation.h" type="QVariant">
                <getter name="endValue"></getter>
                <setter name="setEndValue"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentValue" fullname="QtVariantAnimation::currentValue" href="qtvariantanimation.html#currentValue-prop" location="qtvariantanimation.h" type="QVariant">
                <getter name="currentValue"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QtVariantAnimation::duration" href="qtvariantanimation.html#duration-prop" location="qtvariantanimation.h" type="int">
                <getter name="duration"></getter>
                <setter name="setDuration"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="easingCurve" fullname="QtVariantAnimation::easingCurve" href="qtvariantanimation.html#easingCurve-prop" location="qtvariantanimation.h" type="QtEasingCurve">
                <getter name="easingCurve"></getter>
                <setter name="setEasingCurve"></setter>
            </property>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="KeyValue" fullname="QtVariantAnimation::KeyValue" href="qtvariantanimation.html#KeyValue-typedef" location="qtvariantanimation.h"></typedef>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="KeyValues" fullname="QtVariantAnimation::KeyValues" href="qtvariantanimation.html#KeyValues-typedef" location="qtvariantanimation.h"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtVariantAnimation" fullname="QtVariantAnimation::QtVariantAnimation" href="qtvariantanimation.html#QtVariantAnimation" location="qtvariantanimation.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtVariantAnimation(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtVariantAnimation" fullname="QtVariantAnimation::~QtVariantAnimation" href="qtvariantanimation.html#dtor.QtVariantAnimation" location="qtvariantanimation.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtVariantAnimation()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="startValue" fullname="QtVariantAnimation::startValue" href="qtvariantanimation.html#startValue-prop" location="qtvariantanimation.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="startValue" type="QVariant" signature="startValue() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setStartValue" fullname="QtVariantAnimation::setStartValue" href="qtvariantanimation.html#startValue-prop" location="qtvariantanimation.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="startValue" type="void" signature="setStartValue(const QVariant &amp; value)">
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="endValue" fullname="QtVariantAnimation::endValue" href="qtvariantanimation.html#endValue-prop" location="qtvariantanimation.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="endValue" type="QVariant" signature="endValue() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEndValue" fullname="QtVariantAnimation::setEndValue" href="qtvariantanimation.html#endValue-prop" location="qtvariantanimation.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="endValue" type="void" signature="setEndValue(const QVariant &amp; value)">
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keyValueAt" fullname="QtVariantAnimation::keyValueAt" href="qtvariantanimation.html#keyValueAt" location="qtvariantanimation.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="keyValueAt(qreal step) const">
                <parameter left="qreal" right="" name="step" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setKeyValueAt" fullname="QtVariantAnimation::setKeyValueAt" href="qtvariantanimation.html#setKeyValueAt" location="qtvariantanimation.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setKeyValueAt(qreal step, const QVariant &amp; value)">
                <parameter left="qreal" right="" name="step" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="keyValues" fullname="QtVariantAnimation::keyValues" href="qtvariantanimation.html#keyValues" location="qtvariantanimation.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="KeyValues" signature="keyValues() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setKeyValues" fullname="QtVariantAnimation::setKeyValues" href="qtvariantanimation.html#setKeyValues" location="qtvariantanimation.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setKeyValues(const KeyValues &amp; keyValues)">
                <parameter left="const KeyValues &amp;" right="" name="keyValues" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentValue" fullname="QtVariantAnimation::currentValue" href="qtvariantanimation.html#currentValue-prop" location="qtvariantanimation.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentValue" type="QVariant" signature="currentValue() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QtVariantAnimation::duration" href="qtvariantanimation.html#duration-prop" location="qtvariantanimation.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="int" signature="duration() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDuration" fullname="QtVariantAnimation::setDuration" href="qtvariantanimation.html#duration-prop" location="qtvariantanimation.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="duration" type="void" signature="setDuration(int msecs)">
                <parameter left="int" right="" name="msecs" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="easingCurve" fullname="QtVariantAnimation::easingCurve" href="qtvariantanimation.html#easingCurve-prop" location="qtvariantanimation.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="easingCurve" type="QtEasingCurve" signature="easingCurve() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEasingCurve" fullname="QtVariantAnimation::setEasingCurve" href="qtvariantanimation.html#easingCurve-prop" location="qtvariantanimation.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="easingCurve" type="void" signature="setEasingCurve(const QtEasingCurve &amp; easing)">
                <parameter left="const QtEasingCurve &amp;" right="" name="easing" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="valueChanged" fullname="QtVariantAnimation::valueChanged" href="qtvariantanimation.html#valueChanged" location="qtvariantanimation.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="valueChanged(const QVariant &amp; value)">
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateCurrentValue" fullname="QtVariantAnimation::updateCurrentValue" href="qtvariantanimation.html#updateCurrentValue" location="qtvariantanimation.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="updateCurrentValue(const QVariant &amp; value)">
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="interpolated" fullname="QtVariantAnimation::interpolated" href="qtvariantanimation.html#interpolated" location="qtvariantanimation.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="QVariant" signature="interpolated(const QVariant &amp; from, const QVariant &amp; to, qreal progress) const">
                <parameter left="const QVariant &amp;" right="" name="from" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="to" default=""></parameter>
                <parameter left="qreal" right="" name="progress" default=""></parameter>
            </function>
        </class>
        <function access="public" threadsafety="thread safe" status="commendable" name="qRegisterAnimationInterpolator" href="qtvariantanimation.html#qRegisterAnimationInterpolator" location="qtvariantanimation.h" virtual="non" meta="plain" const="false" static="true" overload="false" relates="QtVariantAnimation" type="void" signature="qRegisterAnimationInterpolator(QVariant(* ) ( const T &amp; from, const T &amp; to, qreal progress ) func)">
            <parameter left="QVariant(* ) ( const T &amp; from, const T &amp; to, qreal progress )" right="" name="func" default=""></parameter>
        </function>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtStateFinishedTransition" href="qtstatefinishedtransition.html" location="qtstatefinishedtransition.h" bases="QtTransition" module="QtCore">
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QtStateFinishedTransition::state" href="qtstatefinishedtransition.html#state-prop" location="qtstatefinishedtransition.h" type="QtState *">
                <getter name="state"></getter>
                <setter name="setState"></setter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtStateFinishedTransition" fullname="QtStateFinishedTransition::QtStateFinishedTransition" href="qtstatefinishedtransition.html#QtStateFinishedTransition" location="qtstatefinishedtransition.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtStateFinishedTransition(QtState * sourceState)">
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtStateFinishedTransition" fullname="QtStateFinishedTransition::QtStateFinishedTransition" href="qtstatefinishedtransition.html#QtStateFinishedTransition-2" location="qtstatefinishedtransition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtStateFinishedTransition(QtState * state, const QList&lt;QtAbstractState *&gt; &amp; targets, QtState * sourceState)">
                <parameter left="QtState *" right="" name="state" default=""></parameter>
                <parameter left="const QList&lt;QtAbstractState *&gt; &amp;" right="" name="targets" default=""></parameter>
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtStateFinishedTransition" fullname="QtStateFinishedTransition::~QtStateFinishedTransition" href="qtstatefinishedtransition.html#dtor.QtStateFinishedTransition" location="qtstatefinishedtransition.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtStateFinishedTransition()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QtStateFinishedTransition::state" href="qtstatefinishedtransition.html#state-prop" location="qtstatefinishedtransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="QtState *" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setState" fullname="QtStateFinishedTransition::setState" href="qtstatefinishedtransition.html#state-prop" location="qtstatefinishedtransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="state" type="void" signature="setState(QtState * state)">
                <parameter left="QtState *" right="" name="state" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtEventTransition" href="qteventtransition.html" location="qteventtransition.h" bases="QtTransition" module="QtCore">
            <contents name="subclassing" title="Subclassing" level="1"></contents>
            <property access="public" threadsafety="unspecified" status="commendable" name="object" fullname="QtEventTransition::object" href="qteventtransition.html#object-prop" location="qteventtransition.h" type="QObject *">
                <getter name="eventSource"></getter>
                <setter name="setEventSource"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="eventType" fullname="QtEventTransition::eventType" href="qteventtransition.html#eventType-prop" location="qteventtransition.h" type="QEvent::Type">
                <getter name="eventType"></getter>
                <setter name="setEventType"></setter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtEventTransition" fullname="QtEventTransition::QtEventTransition" href="qteventtransition.html#QtEventTransition" location="qteventtransition.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtEventTransition(QtState * sourceState)">
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtEventTransition" fullname="QtEventTransition::QtEventTransition" href="qteventtransition.html#QtEventTransition-2" location="qteventtransition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtEventTransition(QObject * object, QEvent::Type type, QtState * sourceState)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="QEvent::Type" right="" name="type" default=""></parameter>
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtEventTransition" fullname="QtEventTransition::QtEventTransition" href="qteventtransition.html#QtEventTransition-3" location="qteventtransition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QtEventTransition(QObject * object, QEvent::Type type, const QList&lt;QtAbstractState *&gt; &amp; targets, QtState * sourceState)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="QEvent::Type" right="" name="type" default=""></parameter>
                <parameter left="const QList&lt;QtAbstractState *&gt; &amp;" right="" name="targets" default=""></parameter>
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtEventTransition" fullname="QtEventTransition::~QtEventTransition" href="qteventtransition.html#dtor.QtEventTransition" location="qteventtransition.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtEventTransition()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="eventSource" fullname="QtEventTransition::eventSource" href="qteventtransition.html#object-prop" location="qteventtransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="object" type="QObject *" signature="eventSource() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEventSource" fullname="QtEventTransition::setEventSource" href="qteventtransition.html#object-prop" location="qteventtransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="object" type="void" signature="setEventSource(QObject * object)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="eventType" fullname="QtEventTransition::eventType" href="qteventtransition.html#eventType-prop" location="qteventtransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="eventType" type="QEvent::Type" signature="eventType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setEventType" fullname="QtEventTransition::setEventType" href="qteventtransition.html#eventType-prop" location="qteventtransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="eventType" type="void" signature="setEventType(QEvent::Type type)">
                <parameter left="QEvent::Type" right="" name="type" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="testEventCondition" fullname="QtEventTransition::testEventCondition" href="qteventtransition.html#testEventCondition" location="qteventtransition.h" virtual="impure" meta="plain" const="true" static="false" overload="false" type="bool" signature="testEventCondition(QEvent * event) const">
                <parameter left="QEvent *" right="" name="event" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtState" href="qtstate.html" location="qtstate.h" bases="QtActionState" module="QtCore">
            <contents name="states-with-child-states" title="States with Child States" level="1"></contents>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QtState::Type" href="qtstate.html#Type-enum" location="qtstate.h">
                <value name="Normal" value="0"></value>
                <value name="ParallelGroup" value="1"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="HistoryType" fullname="QtState::HistoryType" href="qtstate.html#HistoryType-enum" location="qtstate.h">
                <value name="ShallowHistory" value="0"></value>
                <value name="DeepHistory" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtState" fullname="QtState::QtState" href="qtstate.html#QtState" location="qtstate.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtState(QtState * parent)">
                <parameter left="QtState *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtState" fullname="QtState::QtState" href="qtstate.html#QtState-2" location="qtstate.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtState(Type type, QtState * parent)">
                <parameter left="Type" right="" name="type" default=""></parameter>
                <parameter left="QtState *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtState" fullname="QtState::~QtState" href="qtstate.html#dtor.QtState" location="qtstate.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtState()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorState" fullname="QtState::errorState" href="qtstate.html#errorState" location="qtstate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtAbstractState *" signature="errorState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setErrorState" fullname="QtState::setErrorState" href="qtstate.html#setErrorState" location="qtstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setErrorState(QtAbstractState * state)">
                <parameter left="QtAbstractState *" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addTransition" fullname="QtState::addTransition" href="qtstate.html#addTransition" location="qtstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addTransition(QtAbstractTransition * transition)">
                <parameter left="QtAbstractTransition *" right="" name="transition" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addTransition" fullname="QtState::addTransition" href="qtstate.html#addTransition-2" location="qtstate.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="2" type="QtSignalTransition *" signature="addTransition(QObject * sender, const char * signal, QtAbstractState * target)">
                <parameter left="QObject *" right="" name="sender" default=""></parameter>
                <parameter left="const char *" right="" name="signal" default=""></parameter>
                <parameter left="QtAbstractState *" right="" name="target" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addTransition" fullname="QtState::addTransition" href="qtstate.html#addTransition-3" location="qtstate.h" virtual="non" meta="plain" const="false" static="false" overload="true" overload-number="3" type="QtAbstractTransition *" signature="addTransition(QtAbstractState * target)">
                <parameter left="QtAbstractState *" right="" name="target" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addFinishedTransition" fullname="QtState::addFinishedTransition" href="qtstate.html#addFinishedTransition" location="qtstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtStateFinishedTransition *" signature="addFinishedTransition(QtAbstractState * target)">
                <parameter left="QtAbstractState *" right="" name="target" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeTransition" fullname="QtState::removeTransition" href="qtstate.html#removeTransition" location="qtstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeTransition(QtAbstractTransition * transition)">
                <parameter left="QtAbstractTransition *" right="" name="transition" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="transitions" fullname="QtState::transitions" href="qtstate.html#transitions" location="qtstate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QtAbstractTransition *&gt;" signature="transitions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addHistoryState" fullname="QtState::addHistoryState" href="qtstate.html#addHistoryState" location="qtstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtHistoryState *" signature="addHistoryState(HistoryType type)">
                <parameter left="HistoryType" right="" name="type" default="ShallowHistory"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="initialState" fullname="QtState::initialState" href="qtstate.html#initialState" location="qtstate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtAbstractState *" signature="initialState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInitialState" fullname="QtState::setInitialState" href="qtstate.html#setInitialState" location="qtstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setInitialState(QtAbstractState * state)">
                <parameter left="QtAbstractState *" right="" name="state" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtTransition" href="qttransition.html" location="qttransition.h" bases="QtAbstractTransition" module="QtCore">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtTransition" fullname="QtTransition::QtTransition" href="qttransition.html#QtTransition" location="qttransition.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtTransition(QtState * sourceState)">
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtTransition" fullname="QtTransition::QtTransition" href="qttransition.html#QtTransition-2" location="qttransition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtTransition(const QList&lt;QtAbstractState *&gt; &amp; targets, QtState * sourceState)">
                <parameter left="const QList&lt;QtAbstractState *&gt; &amp;" right="" name="targets" default=""></parameter>
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtTransition" fullname="QtTransition::~QtTransition" href="qttransition.html#dtor.QtTransition" location="qttransition.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtTransition()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="invokeMethodOnTransition" fullname="QtTransition::invokeMethodOnTransition" href="qttransition.html#invokeMethodOnTransition" location="qttransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="invokeMethodOnTransition(QObject * object, const char * method, const QList&lt;QVariant&gt; &amp; arguments)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="method" default=""></parameter>
                <parameter left="const QList&lt;QVariant&gt; &amp;" right="" name="arguments" default="QList&lt;QVariant&gt; ()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAction" fullname="QtTransition::addAction" href="qttransition.html#addAction" location="qttransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addAction(QtStateAction * action)">
                <parameter left="QtStateAction *" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAction" fullname="QtTransition::removeAction" href="qttransition.html#removeAction" location="qttransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeAction(QtStateAction * action)">
                <parameter left="QtStateAction *" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="actions" fullname="QtTransition::actions" href="qttransition.html#actions" location="qttransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QtStateAction *&gt;" signature="actions() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtActionState" href="qtactionstate.html" location="qtactionstate.h" bases="QtAbstractState" module="QtCore">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtActionState" fullname="QtActionState::QtActionState" href="qtactionstate.html#QtActionState" location="qtactionstate.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtActionState(QtState * parent)">
                <parameter left="QtState *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtActionState" fullname="QtActionState::~QtActionState" href="qtactionstate.html#dtor.QtActionState" location="qtactionstate.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtActionState()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="invokeMethodOnEntry" fullname="QtActionState::invokeMethodOnEntry" href="qtactionstate.html#invokeMethodOnEntry" location="qtactionstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="invokeMethodOnEntry(QObject * object, const char * method, const QList&lt;QVariant&gt; &amp; arguments)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="method" default=""></parameter>
                <parameter left="const QList&lt;QVariant&gt; &amp;" right="" name="arguments" default="QList&lt;QVariant&gt; ()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="invokeMethodOnExit" fullname="QtActionState::invokeMethodOnExit" href="qtactionstate.html#invokeMethodOnExit" location="qtactionstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="invokeMethodOnExit(QObject * object, const char * method, const QList&lt;QVariant&gt; &amp; arguments)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="method" default=""></parameter>
                <parameter left="const QList&lt;QVariant&gt; &amp;" right="" name="arguments" default="QList&lt;QVariant&gt; ()"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addEntryAction" fullname="QtActionState::addEntryAction" href="qtactionstate.html#addEntryAction" location="qtactionstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addEntryAction(QtStateAction * action)">
                <parameter left="QtStateAction *" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addExitAction" fullname="QtActionState::addExitAction" href="qtactionstate.html#addExitAction" location="qtactionstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addExitAction(QtStateAction * action)">
                <parameter left="QtStateAction *" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeEntryAction" fullname="QtActionState::removeEntryAction" href="qtactionstate.html#removeEntryAction" location="qtactionstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeEntryAction(QtStateAction * action)">
                <parameter left="QtStateAction *" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeExitAction" fullname="QtActionState::removeExitAction" href="qtactionstate.html#removeExitAction" location="qtactionstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeExitAction(QtStateAction * action)">
                <parameter left="QtStateAction *" right="" name="action" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="entryActions" fullname="QtActionState::entryActions" href="qtactionstate.html#entryActions" location="qtactionstate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QtStateAction *&gt;" signature="entryActions() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="exitActions" fullname="QtActionState::exitActions" href="qtactionstate.html#exitActions" location="qtactionstate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QtStateAction *&gt;" signature="exitActions() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QtPauseAnimation" href="qtpauseanimation.html" location="qtpauseanimation.h" bases="QtAbstractAnimation" module="QtCore">
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QtPauseAnimation::duration" href="qtpauseanimation.html#duration-prop" location="qtpauseanimation.h" type="int">
                <getter name="duration"></getter>
                <setter name="setDuration"></setter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtPauseAnimation" fullname="QtPauseAnimation::QtPauseAnimation" href="qtpauseanimation.html#QtPauseAnimation" location="qtpauseanimation.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtPauseAnimation(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtPauseAnimation" fullname="QtPauseAnimation::QtPauseAnimation" href="qtpauseanimation.html#QtPauseAnimation-2" location="qtpauseanimation.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtPauseAnimation(int msecs, QObject * parent)">
                <parameter left="int" right="" name="msecs" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtPauseAnimation" fullname="QtPauseAnimation::~QtPauseAnimation" href="qtpauseanimation.html#dtor.QtPauseAnimation" location="qtpauseanimation.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtPauseAnimation()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QtPauseAnimation::duration" href="qtpauseanimation.html#duration-prop" location="qtpauseanimation.cpp" virtual="impure" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="int" signature="duration() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDuration" fullname="QtPauseAnimation::setDuration" href="qtpauseanimation.html#duration-prop" location="qtpauseanimation.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="duration" type="void" signature="setDuration(int msecs)">
                <parameter left="int" right="" name="msecs" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtAbstractState" href="qtabstractstate.html" location="qtabstractstate.h" bases="QObject" module="QtCore">
            <contents name="subclassing" title="Subclassing" level="1"></contents>
            <property access="public" threadsafety="unspecified" status="commendable" name="restorePolicy" fullname="QtAbstractState::restorePolicy" href="qtabstractstate.html#restorePolicy-prop" location="qtabstractstate.h" type="RestorePolicy">
                <getter name="restorePolicy"></getter>
                <setter name="setRestorePolicy"></setter>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="RestorePolicy" fullname="QtAbstractState::RestorePolicy" href="qtabstractstate.html#RestorePolicy-enum" location="qtabstractstate.h">
                <value name="GlobalRestorePolicy" value="0"></value>
                <value name="DoNotRestoreProperties" value="1"></value>
                <value name="RestoreProperties" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtAbstractState" fullname="QtAbstractState::~QtAbstractState" href="qtabstractstate.html#dtor.QtAbstractState" location="qtabstractstate.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtAbstractState()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="parentState" fullname="QtAbstractState::parentState" href="qtabstractstate.html#parentState" location="qtabstractstate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtState *" signature="parentState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="assignProperty" fullname="QtAbstractState::assignProperty" href="qtabstractstate.html#assignProperty" location="qtabstractstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="assignProperty(QObject * object, const char * name, const QVariant &amp; value)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="const char *" right="" name="name" default=""></parameter>
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setRestorePolicy" fullname="QtAbstractState::setRestorePolicy" href="qtabstractstate.html#restorePolicy-prop" location="qtabstractstate.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="restorePolicy" type="void" signature="setRestorePolicy(RestorePolicy restorePolicy)">
                <parameter left="RestorePolicy" right="" name="restorePolicy" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="restorePolicy" fullname="QtAbstractState::restorePolicy" href="qtabstractstate.html#restorePolicy-prop" location="qtabstractstate.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="restorePolicy" type="RestorePolicy" signature="restorePolicy() const"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QtAbstractState" fullname="QtAbstractState::QtAbstractState" href="qtabstractstate.html#QtAbstractState" location="qtabstractstate.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtAbstractState(QtState * parent)">
                <parameter left="QtState *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="onEntry" fullname="QtAbstractState::onEntry" href="qtabstractstate.html#onEntry" location="qtabstractstate.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="onEntry()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="onExit" fullname="QtAbstractState::onExit" href="qtabstractstate.html#onExit" location="qtabstractstate.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="onExit()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QtParallelAnimationGroup" href="qtparallelanimationgroup.html" location="qtparallelanimationgroup.h" bases="QtAnimationGroup" module="QtCore">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtParallelAnimationGroup" fullname="QtParallelAnimationGroup::QtParallelAnimationGroup" href="qtparallelanimationgroup.html#QtParallelAnimationGroup" location="qtparallelanimationgroup.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtParallelAnimationGroup(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtParallelAnimationGroup" fullname="QtParallelAnimationGroup::~QtParallelAnimationGroup" href="qtparallelanimationgroup.html#dtor.QtParallelAnimationGroup" location="qtparallelanimationgroup.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtParallelAnimationGroup()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QtAnimationGroup" href="qtanimationgroup.html" location="qtanimationgroup.h" bases="QtAbstractAnimation" module="QtCore">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtAnimationGroup" fullname="QtAnimationGroup::QtAnimationGroup" href="qtanimationgroup.html#QtAnimationGroup" location="qtanimationgroup.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtAnimationGroup(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtAnimationGroup" fullname="QtAnimationGroup::~QtAnimationGroup" href="qtanimationgroup.html#dtor.QtAnimationGroup" location="qtanimationgroup.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtAnimationGroup()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="animationAt" fullname="QtAnimationGroup::animationAt" href="qtanimationgroup.html#animationAt" location="qtanimationgroup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtAbstractAnimation *" signature="animationAt(int index) const">
                <parameter left="int" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="animationCount" fullname="QtAnimationGroup::animationCount" href="qtanimationgroup.html#animationCount" location="qtanimationgroup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="animationCount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="indexOfAnimation" fullname="QtAnimationGroup::indexOfAnimation" href="qtanimationgroup.html#indexOfAnimation" location="qtanimationgroup.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="indexOfAnimation(QtAbstractAnimation * animation) const">
                <parameter left="QtAbstractAnimation *" right="" name="animation" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addAnimation" fullname="QtAnimationGroup::addAnimation" href="qtanimationgroup.html#addAnimation" location="qtanimationgroup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addAnimation(QtAbstractAnimation * animation)">
                <parameter left="QtAbstractAnimation *" right="" name="animation" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertAnimationAt" fullname="QtAnimationGroup::insertAnimationAt" href="qtanimationgroup.html#insertAnimationAt" location="qtanimationgroup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="insertAnimationAt(int index, QtAbstractAnimation * animation)">
                <parameter left="int" right="" name="index" default=""></parameter>
                <parameter left="QtAbstractAnimation *" right="" name="animation" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeAnimation" fullname="QtAnimationGroup::removeAnimation" href="qtanimationgroup.html#removeAnimation" location="qtanimationgroup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeAnimation(QtAbstractAnimation * animation)">
                <parameter left="QtAbstractAnimation *" right="" name="animation" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="takeAnimationAt" fullname="QtAnimationGroup::takeAnimationAt" href="qtanimationgroup.html#takeAnimationAt" location="qtanimationgroup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtAbstractAnimation *" signature="takeAnimationAt(int index)">
                <parameter left="int" right="" name="index" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearAnimations" fullname="QtAnimationGroup::clearAnimations" href="qtanimationgroup.html#clearAnimations" location="qtanimationgroup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearAnimations()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtKeyEventTransition" href="qtkeyeventtransition.html" location="qtkeyeventtransition.h" bases="QtEventTransition" module="QtCore">
            <property access="public" threadsafety="unspecified" status="commendable" name="key" fullname="QtKeyEventTransition::key" href="qtkeyeventtransition.html#key-prop" location="qtkeyeventtransition.h" type="int">
                <getter name="key"></getter>
                <setter name="setKey"></setter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtKeyEventTransition" fullname="QtKeyEventTransition::QtKeyEventTransition" href="qtkeyeventtransition.html#QtKeyEventTransition" location="qtkeyeventtransition.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtKeyEventTransition(QtState * sourceState)">
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtKeyEventTransition" fullname="QtKeyEventTransition::QtKeyEventTransition" href="qtkeyeventtransition.html#QtKeyEventTransition-2" location="qtkeyeventtransition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtKeyEventTransition(QObject * object, QEvent::Type type, int key, QtState * sourceState)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="QEvent::Type" right="" name="type" default=""></parameter>
                <parameter left="int" right="" name="key" default=""></parameter>
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtKeyEventTransition" fullname="QtKeyEventTransition::QtKeyEventTransition" href="qtkeyeventtransition.html#QtKeyEventTransition-3" location="qtkeyeventtransition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QtKeyEventTransition(QObject * object, QEvent::Type type, int key, const QList&lt;QtAbstractState *&gt; &amp; targets, QtState * sourceState)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="QEvent::Type" right="" name="type" default=""></parameter>
                <parameter left="int" right="" name="key" default=""></parameter>
                <parameter left="const QList&lt;QtAbstractState *&gt; &amp;" right="" name="targets" default=""></parameter>
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtKeyEventTransition" fullname="QtKeyEventTransition::~QtKeyEventTransition" href="qtkeyeventtransition.html#dtor.QtKeyEventTransition" location="qtkeyeventtransition.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtKeyEventTransition()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="key" fullname="QtKeyEventTransition::key" href="qtkeyeventtransition.html#key-prop" location="qtkeyeventtransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="key" type="int" signature="key() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setKey" fullname="QtKeyEventTransition::setKey" href="qtkeyeventtransition.html#key-prop" location="qtkeyeventtransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="key" type="void" signature="setKey(int key)">
                <parameter left="int" right="" name="key" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="modifiers" fullname="QtKeyEventTransition::modifiers" href="qtkeyeventtransition.html#modifiers" location="qtkeyeventtransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::KeyboardModifiers" signature="modifiers() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setModifiers" fullname="QtKeyEventTransition::setModifiers" href="qtkeyeventtransition.html#setModifiers" location="qtkeyeventtransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setModifiers(Qt::KeyboardModifiers modifiers)">
                <parameter left="Qt::KeyboardModifiers" right="" name="modifiers" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtEasingCurve" href="qteasingcurve.html" location="qteasingcurve.h" bases="" module="QtCore">
            <enum access="public" threadsafety="unspecified" status="commendable" name="Type" fullname="QtEasingCurve::Type" href="qteasingcurve.html#Type-enum" location="qteasingcurve.h">
                <value name="Linear" value="0"></value>
                <value name="InQuad" value="1"></value>
                <value name="OutQuad" value="2"></value>
                <value name="InOutQuad" value="3"></value>
                <value name="OutInQuad" value="4"></value>
                <value name="InCubic" value="5"></value>
                <value name="OutCubic" value="6"></value>
                <value name="InOutCubic" value="7"></value>
                <value name="OutInCubic" value="8"></value>
                <value name="InQuart" value="9"></value>
                <value name="OutQuart" value="10"></value>
                <value name="InOutQuart" value="11"></value>
                <value name="OutInQuart" value="12"></value>
                <value name="InQuint" value="13"></value>
                <value name="OutQuint" value="14"></value>
                <value name="InOutQuint" value="15"></value>
                <value name="OutInQuint" value="16"></value>
                <value name="InSine" value="17"></value>
                <value name="OutSine" value="18"></value>
                <value name="InOutSine" value="19"></value>
                <value name="OutInSine" value="20"></value>
                <value name="InExpo" value="21"></value>
                <value name="OutExpo" value="22"></value>
                <value name="InOutExpo" value="23"></value>
                <value name="OutInExpo" value="24"></value>
                <value name="InCirc" value="25"></value>
                <value name="OutCirc" value="26"></value>
                <value name="InOutCirc" value="27"></value>
                <value name="OutInCirc" value="28"></value>
                <value name="InElastic" value="29"></value>
                <value name="OutElastic" value="30"></value>
                <value name="InOutElastic" value="31"></value>
                <value name="OutInElastic" value="32"></value>
                <value name="InBack" value="33"></value>
                <value name="OutBack" value="34"></value>
                <value name="InOutBack" value="35"></value>
                <value name="OutInBack" value="36"></value>
                <value name="InBounce" value="37"></value>
                <value name="OutBounce" value="38"></value>
                <value name="InOutBounce" value="39"></value>
                <value name="OutInBounce" value="40"></value>
                <value name="InCurve" value="41"></value>
                <value name="OutCurve" value="42"></value>
                <value name="SineCurve" value="43"></value>
                <value name="CosineCurve" value="44"></value>
                <value name="Custom" value="45"></value>
                <value name="NCurveTypes" value="46"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtEasingCurve" fullname="QtEasingCurve::QtEasingCurve" href="qteasingcurve.html#QtEasingCurve" location="qteasingcurve.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtEasingCurve(Type type)">
                <parameter left="Type" right="" name="type" default="Linear"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtEasingCurve" fullname="QtEasingCurve::QtEasingCurve" href="qteasingcurve.html#QtEasingCurve-2" location="qteasingcurve.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtEasingCurve(const QtEasingCurve &amp; other)">
                <parameter left="const QtEasingCurve &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtEasingCurve" fullname="QtEasingCurve::~QtEasingCurve" href="qteasingcurve.html#dtor.QtEasingCurve" location="qteasingcurve.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtEasingCurve()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator=" fullname="QtEasingCurve::operator=" href="qteasingcurve.html#operator=" location="qteasingcurve.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtEasingCurve &amp;" signature="operator=(const QtEasingCurve &amp; other)">
                <parameter left="const QtEasingCurve &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator==" fullname="QtEasingCurve::operator==" href="qteasingcurve.html#operator==" location="qteasingcurve.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator==(const QtEasingCurve &amp; other) const">
                <parameter left="const QtEasingCurve &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="operator!=" fullname="QtEasingCurve::operator!=" href="qteasingcurve.html#operator!=" location="qteasingcurve.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="bool" signature="operator!=(const QtEasingCurve &amp; other) const">
                <parameter left="const QtEasingCurve &amp;" right="" name="other" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="amplitude" fullname="QtEasingCurve::amplitude" href="qteasingcurve.html#amplitude" location="qteasingcurve.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="amplitude() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setAmplitude" fullname="QtEasingCurve::setAmplitude" href="qteasingcurve.html#setAmplitude" location="qteasingcurve.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setAmplitude(qreal amplitude)">
                <parameter left="qreal" right="" name="amplitude" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="period" fullname="QtEasingCurve::period" href="qteasingcurve.html#period" location="qteasingcurve.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="period() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPeriod" fullname="QtEasingCurve::setPeriod" href="qteasingcurve.html#setPeriod" location="qteasingcurve.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPeriod(qreal period)">
                <parameter left="qreal" right="" name="period" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="overshoot" fullname="QtEasingCurve::overshoot" href="qteasingcurve.html#overshoot" location="qteasingcurve.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="overshoot() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setOvershoot" fullname="QtEasingCurve::setOvershoot" href="qteasingcurve.html#setOvershoot" location="qteasingcurve.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setOvershoot(qreal overshoot)">
                <parameter left="qreal" right="" name="overshoot" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="type" fullname="QtEasingCurve::type" href="qteasingcurve.html#type" location="qteasingcurve.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Type" signature="type() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setType" fullname="QtEasingCurve::setType" href="qteasingcurve.html#setType" location="qteasingcurve.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setType(Type type)">
                <parameter left="Type" right="" name="type" default=""></parameter>
            </function>
            <typedef access="public" threadsafety="unspecified" status="commendable" name="EasingFunction" fullname="QtEasingCurve::EasingFunction" href="qteasingcurve.html#EasingFunction-typedef" location="qteasingcurve.h"></typedef>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCustomType" fullname="QtEasingCurve::setCustomType" href="qteasingcurve.html#setCustomType" location="qteasingcurve.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setCustomType(EasingFunction func)">
                <parameter left="EasingFunction" right="" name="func" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="customType" fullname="QtEasingCurve::customType" href="qteasingcurve.html#customType" location="qteasingcurve.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="EasingFunction" signature="customType() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="valueForProgress" fullname="QtEasingCurve::valueForProgress" href="qteasingcurve.html#valueForProgress" location="qteasingcurve.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="qreal" signature="valueForProgress(qreal progress) const">
                <parameter left="qreal" right="" name="progress" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtMouseEventTransition" href="qtmouseeventtransition.html" location="qtmouseeventtransition.h" bases="QtEventTransition" module="QtCore">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtMouseEventTransition" fullname="QtMouseEventTransition::QtMouseEventTransition" href="qtmouseeventtransition.html#QtMouseEventTransition" location="qtmouseeventtransition.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtMouseEventTransition(QtState * sourceState)">
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtMouseEventTransition" fullname="QtMouseEventTransition::QtMouseEventTransition" href="qtmouseeventtransition.html#QtMouseEventTransition-2" location="qtmouseeventtransition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtMouseEventTransition(QObject * object, QEvent::Type type, Qt::MouseButton button, QtState * sourceState)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="QEvent::Type" right="" name="type" default=""></parameter>
                <parameter left="Qt::MouseButton" right="" name="button" default=""></parameter>
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtMouseEventTransition" fullname="QtMouseEventTransition::QtMouseEventTransition" href="qtmouseeventtransition.html#QtMouseEventTransition-3" location="qtmouseeventtransition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QtMouseEventTransition(QObject * object, QEvent::Type type, Qt::MouseButton button, const QList&lt;QtAbstractState *&gt; &amp; targets, QtState * sourceState)">
                <parameter left="QObject *" right="" name="object" default=""></parameter>
                <parameter left="QEvent::Type" right="" name="type" default=""></parameter>
                <parameter left="Qt::MouseButton" right="" name="button" default=""></parameter>
                <parameter left="const QList&lt;QtAbstractState *&gt; &amp;" right="" name="targets" default=""></parameter>
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtMouseEventTransition" fullname="QtMouseEventTransition::~QtMouseEventTransition" href="qtmouseeventtransition.html#dtor.QtMouseEventTransition" location="qtmouseeventtransition.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtMouseEventTransition()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="button" fullname="QtMouseEventTransition::button" href="qtmouseeventtransition.html#button" location="qtmouseeventtransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Qt::MouseButton" signature="button() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setButton" fullname="QtMouseEventTransition::setButton" href="qtmouseeventtransition.html#setButton" location="qtmouseeventtransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setButton(Qt::MouseButton button)">
                <parameter left="Qt::MouseButton" right="" name="button" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="path" fullname="QtMouseEventTransition::path" href="qtmouseeventtransition.html#path" location="qtmouseeventtransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QPainterPath" signature="path() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPath" fullname="QtMouseEventTransition::setPath" href="qtmouseeventtransition.html#setPath" location="qtmouseeventtransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setPath(const QPainterPath &amp; path)">
                <parameter left="const QPainterPath &amp;" right="" name="path" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtFinalState" href="qtfinalstate.html" location="qtfinalstate.h" bases="QtActionState" module="QtCore">
            <function access="public" threadsafety="unspecified" status="commendable" name="QtFinalState" fullname="QtFinalState::QtFinalState" href="qtfinalstate.html#QtFinalState" location="qtfinalstate.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtFinalState(QtState * parent)">
                <parameter left="QtState *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtFinalState" fullname="QtFinalState::~QtFinalState" href="qtfinalstate.html#dtor.QtFinalState" location="qtfinalstate.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtFinalState()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QtSequentialAnimationGroup" href="qtsequentialanimationgroup.html" location="qtsequentialanimationgroup.h" bases="QtAnimationGroup" module="QtCore">
            <property access="public" threadsafety="unspecified" status="commendable" name="currentAnimation" fullname="QtSequentialAnimationGroup::currentAnimation" href="qtsequentialanimationgroup.html#currentAnimation-prop" location="qtsequentialanimationgroup.h" type="QtAbstractAnimation *">
                <getter name="currentAnimation"></getter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtSequentialAnimationGroup" fullname="QtSequentialAnimationGroup::QtSequentialAnimationGroup" href="qtsequentialanimationgroup.html#QtSequentialAnimationGroup" location="qtsequentialanimationgroup.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtSequentialAnimationGroup(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtSequentialAnimationGroup" fullname="QtSequentialAnimationGroup::~QtSequentialAnimationGroup" href="qtsequentialanimationgroup.html#dtor.QtSequentialAnimationGroup" location="qtsequentialanimationgroup.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtSequentialAnimationGroup()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addPause" fullname="QtSequentialAnimationGroup::addPause" href="qtsequentialanimationgroup.html#addPause" location="qtsequentialanimationgroup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtPauseAnimation *" signature="addPause(int msecs)">
                <parameter left="int" right="" name="msecs" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="insertPauseAt" fullname="QtSequentialAnimationGroup::insertPauseAt" href="qtsequentialanimationgroup.html#insertPauseAt" location="qtsequentialanimationgroup.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="QtPauseAnimation *" signature="insertPauseAt(int index, int msecs)">
                <parameter left="int" right="" name="index" default=""></parameter>
                <parameter left="int" right="" name="msecs" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentAnimation" fullname="QtSequentialAnimationGroup::currentAnimation" href="qtsequentialanimationgroup.html#currentAnimation-prop" location="qtsequentialanimationgroup.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentAnimation" type="QtAbstractAnimation *" signature="currentAnimation() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentAnimationChanged" fullname="QtSequentialAnimationGroup::currentAnimationChanged" href="qtsequentialanimationgroup.html#currentAnimationChanged" location="qtsequentialanimationgroup.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentAnimationChanged(QtAbstractAnimation * current)">
                <parameter left="QtAbstractAnimation *" right="" name="current" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtStateFinishedEvent" href="qtstatefinishedevent.html" location="qtstatefinishedevent.h" bases="QEvent" module="QtCore">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtStateFinishedEvent" fullname="QtStateFinishedEvent::~QtStateFinishedEvent" href="qtstatefinishedevent.html#dtor.QtStateFinishedEvent" location="qtstatefinishedevent.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtStateFinishedEvent()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QtStateFinishedEvent::state" href="qtstatefinishedevent.html#state" location="qtstatefinishedevent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtState *" signature="state() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtSignalEvent" href="qtsignalevent.html" location="qtsignalevent.h" bases="QEvent" module="QtCore">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtSignalEvent" fullname="QtSignalEvent::~QtSignalEvent" href="qtsignalevent.html#dtor.QtSignalEvent" location="qtsignalevent.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtSignalEvent()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="sender" fullname="QtSignalEvent::sender" href="qtsignalevent.html#sender" location="qtsignalevent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="const QObject *" signature="sender() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signalIndex" fullname="QtSignalEvent::signalIndex" href="qtsignalevent.html#signalIndex" location="qtsignalevent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="signalIndex() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="arguments" fullname="QtSignalEvent::arguments" href="qtsignalevent.html#arguments" location="qtsignalevent.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QVariant&gt;" signature="arguments() const"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QtAbstractAnimation" href="qtabstractanimation.html" location="qtabstractanimation.h" bases="QObject" module="QtCore">
            <property access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QtAbstractAnimation::state" href="qtabstractanimation.html#state-prop" location="qtabstractanimation.h" type="State">
                <getter name="state"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="loopCount" fullname="QtAbstractAnimation::loopCount" href="qtabstractanimation.html#loopCount-prop" location="qtabstractanimation.h" type="int">
                <getter name="loopCount"></getter>
                <setter name="setLoopCount"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentTime" fullname="QtAbstractAnimation::currentTime" href="qtabstractanimation.html#currentTime-prop" location="qtabstractanimation.h" type="int">
                <getter name="currentTime"></getter>
                <setter name="setCurrentTime"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="currentLoop" fullname="QtAbstractAnimation::currentLoop" href="qtabstractanimation.html#currentLoop-prop" location="qtabstractanimation.h" type="int">
                <getter name="currentLoop"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="direction" fullname="QtAbstractAnimation::direction" href="qtabstractanimation.html#direction-prop" location="qtabstractanimation.h" type="Direction">
                <getter name="direction"></getter>
                <setter name="setDirection"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QtAbstractAnimation::duration" href="qtabstractanimation.html#duration-prop" location="qtabstractanimation.h" type="int">
                <getter name="duration"></getter>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Direction" fullname="QtAbstractAnimation::Direction" href="qtabstractanimation.html#Direction-enum" location="qtabstractanimation.h">
                <value name="Forward" value="0"></value>
                <value name="Backward" value="1"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="State" fullname="QtAbstractAnimation::State" href="qtabstractanimation.html#State-enum" location="qtabstractanimation.h">
                <value name="Stopped" value="0"></value>
                <value name="Paused" value="1"></value>
                <value name="Running" value="2"></value>
            </enum>
            <enum access="public" threadsafety="unspecified" status="commendable" name="DeletionPolicy" fullname="QtAbstractAnimation::DeletionPolicy" href="qtabstractanimation.html#DeletionPolicy-enum" location="qtabstractanimation.h">
                <value name="KeepWhenStopped" value="0"></value>
                <value name="DeleteWhenStopped" value="1"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtAbstractAnimation" fullname="QtAbstractAnimation::QtAbstractAnimation" href="qtabstractanimation.html#QtAbstractAnimation" location="qtabstractanimation.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtAbstractAnimation(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtAbstractAnimation" fullname="QtAbstractAnimation::~QtAbstractAnimation" href="qtabstractanimation.html#dtor.QtAbstractAnimation" location="qtabstractanimation.h" virtual="impure" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtAbstractAnimation()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="state" fullname="QtAbstractAnimation::state" href="qtabstractanimation.html#state-prop" location="qtabstractanimation.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="state" type="State" signature="state() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="group" fullname="QtAbstractAnimation::group" href="qtabstractanimation.html#group" location="qtabstractanimation.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtAnimationGroup *" signature="group() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="direction" fullname="QtAbstractAnimation::direction" href="qtabstractanimation.html#direction-prop" location="qtabstractanimation.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="direction" type="Direction" signature="direction() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDirection" fullname="QtAbstractAnimation::setDirection" href="qtabstractanimation.html#direction-prop" location="qtabstractanimation.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="direction" type="void" signature="setDirection(Direction direction)">
                <parameter left="Direction" right="" name="direction" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="loopCount" fullname="QtAbstractAnimation::loopCount" href="qtabstractanimation.html#loopCount-prop" location="qtabstractanimation.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="loopCount" type="int" signature="loopCount() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setLoopCount" fullname="QtAbstractAnimation::setLoopCount" href="qtabstractanimation.html#loopCount-prop" location="qtabstractanimation.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="loopCount" type="void" signature="setLoopCount(int loopCount)">
                <parameter left="int" right="" name="loopCount" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentLoop" fullname="QtAbstractAnimation::currentLoop" href="qtabstractanimation.html#currentLoop-prop" location="qtabstractanimation.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentLoop" type="int" signature="currentLoop() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="duration" fullname="QtAbstractAnimation::duration" href="qtabstractanimation.html#duration-prop" location="qtabstractanimation.h" virtual="pure" meta="plain" const="true" static="false" overload="false" associated-property="duration" type="int" signature="duration() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="totalDuration" fullname="QtAbstractAnimation::totalDuration" href="qtabstractanimation.html#totalDuration" location="qtabstractanimation.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="int" signature="totalDuration() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentTime" fullname="QtAbstractAnimation::currentTime" href="qtabstractanimation.html#currentTime-prop" location="qtabstractanimation.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="currentTime" type="int" signature="currentTime() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QtAbstractAnimation::finished" href="qtabstractanimation.html#finished" location="qtabstractanimation.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stateChanged" fullname="QtAbstractAnimation::stateChanged" href="qtabstractanimation.html#stateChanged" location="qtabstractanimation.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stateChanged(QtAbstractAnimation::State oldState, QtAbstractAnimation::State newState)">
                <parameter left="QtAbstractAnimation::State" right="" name="oldState" default=""></parameter>
                <parameter left="QtAbstractAnimation::State" right="" name="newState" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="currentLoopChanged" fullname="QtAbstractAnimation::currentLoopChanged" href="qtabstractanimation.html#currentLoopChanged" location="qtabstractanimation.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="currentLoopChanged(int currentLoop)">
                <parameter left="int" right="" name="currentLoop" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="directionChanged" fullname="QtAbstractAnimation::directionChanged" href="qtabstractanimation.html#directionChanged" location="qtabstractanimation.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="directionChanged(QtAbstractAnimation::Direction newDirection)">
                <parameter left="QtAbstractAnimation::Direction" right="" name="newDirection" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QtAbstractAnimation::start" href="qtabstractanimation.html#start" location="qtabstractanimation.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="start(QtAbstractAnimation::DeletionPolicy policy)">
                <parameter left="QtAbstractAnimation::DeletionPolicy" right="" name="policy" default="KeepWhenStopped"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="pause" fullname="QtAbstractAnimation::pause" href="qtabstractanimation.html#pause" location="qtabstractanimation.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="pause()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="resume" fullname="QtAbstractAnimation::resume" href="qtabstractanimation.html#resume" location="qtabstractanimation.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="resume()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QtAbstractAnimation::stop" href="qtabstractanimation.html#stop" location="qtabstractanimation.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setCurrentTime" fullname="QtAbstractAnimation::setCurrentTime" href="qtabstractanimation.html#currentTime-prop" location="qtabstractanimation.cpp" virtual="non" meta="slot" const="false" static="false" overload="false" associated-property="currentTime" type="void" signature="setCurrentTime(int msecs)">
                <parameter left="int" right="" name="msecs" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateCurrentTime" fullname="QtAbstractAnimation::updateCurrentTime" href="qtabstractanimation.html#updateCurrentTime" location="qtabstractanimation.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="updateCurrentTime(int msecs)">
                <parameter left="int" right="" name="msecs" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateState" fullname="QtAbstractAnimation::updateState" href="qtabstractanimation.html#updateState" location="qtabstractanimation.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="updateState(QtAbstractAnimation::State oldState, QtAbstractAnimation::State newState)">
                <parameter left="QtAbstractAnimation::State" right="" name="oldState" default=""></parameter>
                <parameter left="QtAbstractAnimation::State" right="" name="newState" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateDirection" fullname="QtAbstractAnimation::updateDirection" href="qtabstractanimation.html#updateDirection" location="qtabstractanimation.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="updateDirection(QtAbstractAnimation::Direction direction)">
                <parameter left="QtAbstractAnimation::Direction" right="" name="direction" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtStateAction" href="qtstateaction.html" location="qtstateaction.h" bases="QObject" module="QtCore">
            <contents name="subclassing" title="Subclassing" level="1"></contents>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtStateAction" fullname="QtStateAction::~QtStateAction" href="qtstateaction.html#dtor.QtStateAction" location="qtstateaction.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtStateAction()"></function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="QtStateAction" fullname="QtStateAction::QtStateAction" href="qtstateaction.html#QtStateAction" location="qtstateaction.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtStateAction(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="execute" fullname="QtStateAction::execute" href="qtstateaction.html#execute" location="qtstateaction.h" virtual="pure" meta="plain" const="false" static="false" overload="false" type="void" signature="execute()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtStateInvokeMethodAction" href="qtstateinvokemethodaction.html" location="qtstateaction.h" bases="QtStateAction" module="QtCore">
            <property access="public" threadsafety="unspecified" status="commendable" name="target" fullname="QtStateInvokeMethodAction::target" href="qtstateinvokemethodaction.html#target-prop" location="qtstateaction.h" type="QObject *">
                <getter name="targetObject"></getter>
                <setter name="setTargetObject"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="methodName" fullname="QtStateInvokeMethodAction::methodName" href="qtstateinvokemethodaction.html#methodName-prop" location="qtstateaction.h" type="QByteArray">
                <getter name="methodName"></getter>
                <setter name="setMethodName"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="arguments" fullname="QtStateInvokeMethodAction::arguments" href="qtstateinvokemethodaction.html#arguments-prop" location="qtstateaction.h" type="QVariantList">
                <getter name="arguments"></getter>
                <setter name="setArguments"></setter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtStateInvokeMethodAction" fullname="QtStateInvokeMethodAction::QtStateInvokeMethodAction" href="qtstateinvokemethodaction.html#QtStateInvokeMethodAction" location="qtstateaction.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtStateInvokeMethodAction(QObject * target, const QByteArray &amp; methodName, QObject * parent)">
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="methodName" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtStateInvokeMethodAction" fullname="QtStateInvokeMethodAction::QtStateInvokeMethodAction" href="qtstateinvokemethodaction.html#QtStateInvokeMethodAction-2" location="qtstateaction.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtStateInvokeMethodAction(QObject * target, const QByteArray &amp; methodName, const QList&lt;QVariant&gt; &amp; args, QObject * parent)">
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="methodName" default=""></parameter>
                <parameter left="const QList&lt;QVariant&gt; &amp;" right="" name="args" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtStateInvokeMethodAction" fullname="QtStateInvokeMethodAction::QtStateInvokeMethodAction" href="qtstateinvokemethodaction.html#QtStateInvokeMethodAction-3" location="qtstateaction.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QtStateInvokeMethodAction(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtStateInvokeMethodAction" fullname="QtStateInvokeMethodAction::~QtStateInvokeMethodAction" href="qtstateinvokemethodaction.html#dtor.QtStateInvokeMethodAction" location="qtstateaction.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtStateInvokeMethodAction()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="targetObject" fullname="QtStateInvokeMethodAction::targetObject" href="qtstateinvokemethodaction.html#target-prop" location="qtstateaction.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="target" type="QObject *" signature="targetObject() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTargetObject" fullname="QtStateInvokeMethodAction::setTargetObject" href="qtstateinvokemethodaction.html#target-prop" location="qtstateaction.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="target" type="void" signature="setTargetObject(QObject * target)">
                <parameter left="QObject *" right="" name="target" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="methodName" fullname="QtStateInvokeMethodAction::methodName" href="qtstateinvokemethodaction.html#methodName-prop" location="qtstateaction.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="methodName" type="QByteArray" signature="methodName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setMethodName" fullname="QtStateInvokeMethodAction::setMethodName" href="qtstateinvokemethodaction.html#methodName-prop" location="qtstateaction.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="methodName" type="void" signature="setMethodName(const QByteArray &amp; methodName)">
                <parameter left="const QByteArray &amp;" right="" name="methodName" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="arguments" fullname="QtStateInvokeMethodAction::arguments" href="qtstateinvokemethodaction.html#arguments-prop" location="qtstateaction.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="arguments" type="QVariantList" signature="arguments() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setArguments" fullname="QtStateInvokeMethodAction::setArguments" href="qtstateinvokemethodaction.html#arguments-prop" location="qtstateaction.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="arguments" type="void" signature="setArguments(const QVariantList &amp; arguments)">
                <parameter left="const QVariantList &amp;" right="" name="arguments" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="reentrant" status="commendable" name="QtStateMachine" href="qtstatemachine.html" location="qtstatemachine.h" bases="QObject" module="QtCore">
            <property access="public" threadsafety="unspecified" status="commendable" name="rootState" fullname="QtStateMachine::rootState" href="qtstatemachine.html#rootState-prop" location="qtstatemachine.h" type="QtState *">
                <getter name="rootState"></getter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="initialState" fullname="QtStateMachine::initialState" href="qtstatemachine.html#initialState-prop" location="qtstatemachine.h" type="QtAbstractState *">
                <getter name="initialState"></getter>
                <setter name="setInitialState"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="errorState" fullname="QtStateMachine::errorState" href="qtstatemachine.html#errorState-prop" location="qtstatemachine.h" type="QtAbstractState *">
                <getter name="errorState"></getter>
                <setter name="setErrorState"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QtStateMachine::errorString" href="qtstatemachine.html#errorString-prop" location="qtstatemachine.h" type="QString">
                <getter name="errorString"></getter>
            </property>
            <enum access="public" threadsafety="unspecified" status="commendable" name="Error" fullname="QtStateMachine::Error" href="qtstatemachine.html#Error-enum" location="qtstatemachine.h">
                <value name="NoError" value="0"></value>
                <value name="NoInitialStateError" value="1"></value>
                <value name="NoDefaultStateInHistoryState" value="2"></value>
            </enum>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtStateMachine" fullname="QtStateMachine::QtStateMachine" href="qtstatemachine.html#QtStateMachine" location="qtstatemachine.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtStateMachine(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtStateMachine" fullname="QtStateMachine::~QtStateMachine" href="qtstatemachine.html#dtor.QtStateMachine" location="qtstatemachine.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtStateMachine()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="addState" fullname="QtStateMachine::addState" href="qtstatemachine.html#addState" location="qtstatemachine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="addState(QtAbstractState * state)">
                <parameter left="QtAbstractState *" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="removeState" fullname="QtStateMachine::removeState" href="qtstatemachine.html#removeState" location="qtstatemachine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="removeState(QtAbstractState * state)">
                <parameter left="QtAbstractState *" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="rootState" fullname="QtStateMachine::rootState" href="qtstatemachine.html#rootState-prop" location="qtstatemachine.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="rootState" type="QtState *" signature="rootState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="initialState" fullname="QtStateMachine::initialState" href="qtstatemachine.html#initialState-prop" location="qtstatemachine.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="initialState" type="QtAbstractState *" signature="initialState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setInitialState" fullname="QtStateMachine::setInitialState" href="qtstatemachine.html#initialState-prop" location="qtstatemachine.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="initialState" type="void" signature="setInitialState(QtAbstractState * state)">
                <parameter left="QtAbstractState *" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorState" fullname="QtStateMachine::errorState" href="qtstatemachine.html#errorState-prop" location="qtstatemachine.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="errorState" type="QtAbstractState *" signature="errorState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setErrorState" fullname="QtStateMachine::setErrorState" href="qtstatemachine.html#errorState-prop" location="qtstatemachine.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="errorState" type="void" signature="setErrorState(QtAbstractState * state)">
                <parameter left="QtAbstractState *" right="" name="state" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="error" fullname="QtStateMachine::error" href="qtstatemachine.html#error" location="qtstatemachine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="Error" signature="error() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="errorString" fullname="QtStateMachine::errorString" href="qtstatemachine.html#errorString-prop" location="qtstatemachine.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="errorString" type="QString" signature="errorString() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="clearError" fullname="QtStateMachine::clearError" href="qtstatemachine.html#clearError" location="qtstatemachine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="clearError()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="globalRestorePolicy" fullname="QtStateMachine::globalRestorePolicy" href="qtstatemachine.html#globalRestorePolicy" location="qtstatemachine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtAbstractState::RestorePolicy" signature="globalRestorePolicy() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setGlobalRestorePolicy" fullname="QtStateMachine::setGlobalRestorePolicy" href="qtstatemachine.html#setGlobalRestorePolicy" location="qtstatemachine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setGlobalRestorePolicy(QtAbstractState::RestorePolicy restorePolicy)">
                <parameter left="QtAbstractState::RestorePolicy" right="" name="restorePolicy" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="postEvent" fullname="QtStateMachine::postEvent" href="qtstatemachine.html#postEvent" location="qtstatemachine.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="postEvent(QEvent * event, int delay)">
                <parameter left="QEvent *" right="" name="event" default=""></parameter>
                <parameter left="int" right="" name="delay" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="states" fullname="QtStateMachine::states" href="qtstatemachine.html#states" location="qtstatemachine.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QList&lt;QtAbstractState *&gt;" signature="states() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="start" fullname="QtStateMachine::start" href="qtstatemachine.html#start" location="qtstatemachine.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="start()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stop" fullname="QtStateMachine::stop" href="qtstatemachine.html#stop" location="qtstatemachine.h" virtual="non" meta="slot" const="false" static="false" overload="false" type="void" signature="stop()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="started" fullname="QtStateMachine::started" href="qtstatemachine.html#started" location="qtstatemachine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="started()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="stopped" fullname="QtStateMachine::stopped" href="qtstatemachine.html#stopped" location="qtstatemachine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="stopped()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="finished" fullname="QtStateMachine::finished" href="qtstatemachine.html#finished" location="qtstatemachine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="finished()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="animationsFinished" fullname="QtStateMachine::animationsFinished" href="qtstatemachine.html#animationsFinished" location="qtstatemachine.h" virtual="non" meta="signal" const="false" static="false" overload="false" type="void" signature="animationsFinished()"></function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtSignalTransition" href="qtsignaltransition.html" location="qtsignaltransition.h" bases="QtTransition" module="QtCore">
            <property access="public" threadsafety="unspecified" status="commendable" name="object" fullname="QtSignalTransition::object" href="qtsignaltransition.html#object-prop" location="qtsignaltransition.h" type="QObject *">
                <getter name="senderObject"></getter>
                <setter name="setSenderObject"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="signal" fullname="QtSignalTransition::signal" href="qtsignaltransition.html#signal-prop" location="qtsignaltransition.h" type="QByteArray">
                <getter name="signal"></getter>
                <setter name="setSignal"></setter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtSignalTransition" fullname="QtSignalTransition::QtSignalTransition" href="qtsignaltransition.html#QtSignalTransition" location="qtsignaltransition.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtSignalTransition(QtState * sourceState)">
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtSignalTransition" fullname="QtSignalTransition::QtSignalTransition" href="qtsignaltransition.html#QtSignalTransition-2" location="qtsignaltransition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtSignalTransition(QObject * sender, const char * signal, QtState * sourceState)">
                <parameter left="QObject *" right="" name="sender" default=""></parameter>
                <parameter left="const char *" right="" name="signal" default=""></parameter>
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtSignalTransition" fullname="QtSignalTransition::QtSignalTransition" href="qtsignaltransition.html#QtSignalTransition-3" location="qtsignaltransition.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="3" type="" signature="QtSignalTransition(QObject * sender, const char * signal, const QList&lt;QtAbstractState *&gt; &amp; targets, QtState * sourceState)">
                <parameter left="QObject *" right="" name="sender" default=""></parameter>
                <parameter left="const char *" right="" name="signal" default=""></parameter>
                <parameter left="const QList&lt;QtAbstractState *&gt; &amp;" right="" name="targets" default=""></parameter>
                <parameter left="QtState *" right="" name="sourceState" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtSignalTransition" fullname="QtSignalTransition::~QtSignalTransition" href="qtsignaltransition.html#dtor.QtSignalTransition" location="qtsignaltransition.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtSignalTransition()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="senderObject" fullname="QtSignalTransition::senderObject" href="qtsignaltransition.html#object-prop" location="qtsignaltransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="object" type="QObject *" signature="senderObject() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSenderObject" fullname="QtSignalTransition::setSenderObject" href="qtsignaltransition.html#object-prop" location="qtsignaltransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="object" type="void" signature="setSenderObject(QObject * sender)">
                <parameter left="QObject *" right="" name="sender" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="signal" fullname="QtSignalTransition::signal" href="qtsignaltransition.html#signal-prop" location="qtsignaltransition.h" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="signal" type="QByteArray" signature="signal() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setSignal" fullname="QtSignalTransition::setSignal" href="qtsignaltransition.html#signal-prop" location="qtsignaltransition.h" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="signal" type="void" signature="setSignal(const QByteArray &amp; signal)">
                <parameter left="const QByteArray &amp;" right="" name="signal" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="commendable" name="QtHistoryState" href="qthistorystate.html" location="qthistorystate.h" bases="QtAbstractState" module="QtCore">
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtHistoryState" fullname="QtHistoryState::~QtHistoryState" href="qthistorystate.html#dtor.QtHistoryState" location="qthistorystate.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtHistoryState()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="defaultState" fullname="QtHistoryState::defaultState" href="qthistorystate.html#defaultState" location="qthistorystate.h" virtual="non" meta="plain" const="true" static="false" overload="false" type="QtAbstractState *" signature="defaultState() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setDefaultState" fullname="QtHistoryState::setDefaultState" href="qthistorystate.html#setDefaultState" location="qthistorystate.h" virtual="non" meta="plain" const="false" static="false" overload="false" type="void" signature="setDefaultState(QtAbstractState * state)">
                <parameter left="QtAbstractState *" right="" name="state" default=""></parameter>
            </function>
        </class>
        <class access="public" threadsafety="unspecified" status="preliminary" name="QtPropertyAnimation" href="qtpropertyanimation.html" location="qtpropertyanimation.h" bases="QtVariantAnimation" module="QtCore">
            <property access="public" threadsafety="unspecified" status="commendable" name="propertyName" fullname="QtPropertyAnimation::propertyName" href="qtpropertyanimation.html#propertyName-prop" location="qtpropertyanimation.h" type="QByteArray">
                <getter name="propertyName"></getter>
                <setter name="setPropertyName"></setter>
            </property>
            <property access="public" threadsafety="unspecified" status="commendable" name="targetObject" fullname="QtPropertyAnimation::targetObject" href="qtpropertyanimation.html#targetObject-prop" location="qtpropertyanimation.h" type="QObject *">
                <getter name="targetObject"></getter>
                <setter name="setTargetObject"></setter>
            </property>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtPropertyAnimation" fullname="QtPropertyAnimation::QtPropertyAnimation" href="qtpropertyanimation.html#QtPropertyAnimation" location="qtpropertyanimation.h" virtual="non" meta="constructor" const="false" static="false" overload="false" type="" signature="QtPropertyAnimation(QObject * parent)">
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="QtPropertyAnimation" fullname="QtPropertyAnimation::QtPropertyAnimation" href="qtpropertyanimation.html#QtPropertyAnimation-2" location="qtpropertyanimation.h" virtual="non" meta="constructor" const="false" static="false" overload="true" overload-number="2" type="" signature="QtPropertyAnimation(QObject * target, const QByteArray &amp; propertyName, QObject * parent)">
                <parameter left="QObject *" right="" name="target" default=""></parameter>
                <parameter left="const QByteArray &amp;" right="" name="propertyName" default=""></parameter>
                <parameter left="QObject *" right="" name="parent" default="0"></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="~QtPropertyAnimation" fullname="QtPropertyAnimation::~QtPropertyAnimation" href="qtpropertyanimation.html#dtor.QtPropertyAnimation" location="qtpropertyanimation.h" virtual="non" meta="destructor" const="false" static="false" overload="false" type="" signature="~QtPropertyAnimation()"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="targetObject" fullname="QtPropertyAnimation::targetObject" href="qtpropertyanimation.html#targetObject-prop" location="qtpropertyanimation.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="targetObject" type="QObject *" signature="targetObject() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setTargetObject" fullname="QtPropertyAnimation::setTargetObject" href="qtpropertyanimation.html#targetObject-prop" location="qtpropertyanimation.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="targetObject" type="void" signature="setTargetObject(QObject * target)">
                <parameter left="QObject *" right="" name="target" default=""></parameter>
            </function>
            <function access="public" threadsafety="unspecified" status="commendable" name="propertyName" fullname="QtPropertyAnimation::propertyName" href="qtpropertyanimation.html#propertyName-prop" location="qtpropertyanimation.cpp" virtual="non" meta="plain" const="true" static="false" overload="false" associated-property="propertyName" type="QByteArray" signature="propertyName() const"></function>
            <function access="public" threadsafety="unspecified" status="commendable" name="setPropertyName" fullname="QtPropertyAnimation::setPropertyName" href="qtpropertyanimation.html#propertyName-prop" location="qtpropertyanimation.cpp" virtual="non" meta="plain" const="false" static="false" overload="false" associated-property="propertyName" type="void" signature="setPropertyName(const QByteArray &amp; propertyName)">
                <parameter left="const QByteArray &amp;" right="" name="propertyName" default=""></parameter>
            </function>
            <function access="protected" threadsafety="unspecified" status="commendable" name="updateCurrentValue" fullname="QtPropertyAnimation::updateCurrentValue" href="qtpropertyanimation.html#updateCurrentValue" location="qtpropertyanimation.h" virtual="impure" meta="plain" const="false" static="false" overload="false" type="void" signature="updateCurrentValue(const QVariant &amp; value)">
                <parameter left="const QVariant &amp;" right="" name="value" default=""></parameter>
            </function>
        </class>
        <page access="public" status="commendable" name="index.html" href="index.html" subtype="page" title="Qt Animation Framework" fulltitle="Qt Animation Framework" subtitle="" location="index.qdoc">
            <contents name="description" title="Description" level="1"></contents>
            <contents name="overview" title="Overview" level="1"></contents>
            <contents name="classes" title="Classes" level="1"></contents>
            <contents name="tested-platforms" title="Tested platforms" level="1"></contents>
            <contents name="screenshots" title="Screenshots" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="animation.html" href="animation.html" subtype="page" title="The Animation Framework" fulltitle="The Animation Framework" subtitle="" location="animation.qdoc">
            <keyword name="animation"></keyword>
            <contents name="the-animation-architecture" title="The Animation Architecture" level="1"></contents>
            <contents name="animating-qt-properties" title="Animating Qt Properties" level="1"></contents>
            <contents name="animations-and-the-graphics-view-framework" title="Animations and the Graphics View Framework" level="1"></contents>
            <contents name="easing-curves" title="Easing Curves" level="1"></contents>
            <contents name="putting-animations-together" title="Putting Animations Together" level="1"></contents>
            <contents name="animations-and-states" title="Animations and States" level="1"></contents>
        </page>
        <page access="public" status="commendable" name="http://www.w3.org/TR/scxml/" href="http-www-w3-org-tr-scxml.html" subtype="externalpage" title="State Chart XML: State Machine Notation for Control Abstraction" fulltitle="State Chart XML: State Machine Notation for Control Abstraction" subtitle="" location="external-resources.qdoc"></page>
        <page access="public" status="commendable" name="http://www.wisdom.weizmann.ac.il/~dharel/SCANNED.PAPERS/Statecharts.pdf" href="http-www-wisdom-weizmann-ac-il-dharel-scanned-papers-statecharts-pdf.html" subtype="externalpage" title="Statecharts: A visual formalism for complex systems" fulltitle="Statecharts: A visual formalism for complex systems" subtitle="" location="external-resources.qdoc"></page>
        <page access="public" status="commendable" name="legal-easing.html" href="legal-easing.html" subtype="page" title="Easing Equations by Robert Penner" fulltitle="Easing Equations by Robert Penner" subtitle="" location="legal.qdoc"></page>
        <page access="public" status="commendable" name="statemachine-api.html" href="statemachine-api.html" subtype="page" title="The State Machine Framework" fulltitle="The State Machine Framework" subtitle="" location="statemachine.qdoc">
            <contents name="a-simple-state-machine" title="A Simple State Machine" level="1"></contents>
            <contents name="sharing-transitions-by-grouping-states" title="Sharing Transitions By Grouping States" level="1"></contents>
            <contents name="using-history-states-to-save-and-restore-the-current-state" title="Using History States to Save and Restore the Current State" level="1"></contents>
            <contents name="using-parallel-states-to-avoid-a-combinatorial-explosion-of-states" title="Using Parallel States to Avoid a Combinatorial Explosion of States" level="1"></contents>
            <contents name="detecting-that-a-composite-state-has-finished" title="Detecting that a Composite State has Finished" level="1"></contents>
        </page>
    </namespace>
</INDEX>
