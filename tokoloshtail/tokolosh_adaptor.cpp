/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp tokolosh.xml -a tokolosh_adaptor -c MediaAdaptor
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "tokolosh_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class MediaAdaptor
 */

MediaAdaptor::MediaAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

MediaAdaptor::~MediaAdaptor()
{
    // destructor
}

void MediaAdaptor::clearLibraryPaths()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.clearLibraryPaths
    QMetaObject::invokeMethod(parent(), "clearLibraryPaths");
}

void MediaAdaptor::dumpFiles()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.dumpFiles
    QMetaObject::invokeMethod(parent(), "dumpFiles");
}

void MediaAdaptor::load(const QString &path)
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.load
    QMetaObject::invokeMethod(parent(), "load", Q_ARG(QString, path));
}

void MediaAdaptor::next()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.next
    QMetaObject::invokeMethod(parent(), "next");
}

void MediaAdaptor::pause()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.pause
    QMetaObject::invokeMethod(parent(), "pause");
}

void MediaAdaptor::play()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.play
    QMetaObject::invokeMethod(parent(), "play");
}

void MediaAdaptor::prev()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.prev
    QMetaObject::invokeMethod(parent(), "prev");
}

bool MediaAdaptor::repeat()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.repeat
    bool enabled;
    QMetaObject::invokeMethod(parent(), "repeat", Q_RETURN_ARG(bool, enabled));
    return enabled;
}

void MediaAdaptor::repopulateLibrary()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.repopulateLibrary
    QMetaObject::invokeMethod(parent(), "repopulateLibrary");
}

void MediaAdaptor::setVolume(int volume)
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.setVolume
    QMetaObject::invokeMethod(parent(), "setVolume", Q_ARG(int, volume));
}

bool MediaAdaptor::shuffle()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.shuffle
    bool enabled;
    QMetaObject::invokeMethod(parent(), "shuffle", Q_RETURN_ARG(bool, enabled));
    return enabled;
}

void MediaAdaptor::stop()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.stop
    QMetaObject::invokeMethod(parent(), "stop");
}

void MediaAdaptor::syncClients()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.syncClients
    QMetaObject::invokeMethod(parent(), "syncClients");
}

void MediaAdaptor::toggleMute()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.toggleMute
    QMetaObject::invokeMethod(parent(), "toggleMute");
}

void MediaAdaptor::toggleRepeat()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.toggleRepeat
    QMetaObject::invokeMethod(parent(), "toggleRepeat");
}

void MediaAdaptor::toggleShuffle()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.toggleShuffle
    QMetaObject::invokeMethod(parent(), "toggleShuffle");
}

int MediaAdaptor::volume()
{
    // handle method call com.TokoloshXineBackend.TokoloshMediaPlayer.volume
    int volume;
    QMetaObject::invokeMethod(parent(), "volume", Q_RETURN_ARG(int, volume));
    return volume;
}

